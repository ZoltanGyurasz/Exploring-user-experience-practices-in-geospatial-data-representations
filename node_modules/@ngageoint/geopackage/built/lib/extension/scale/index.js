"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TileScalingExtension = void 0;
/**
 * @module extension/scale
 */
var baseExtension_1 = require("../baseExtension");
var extension_1 = require("../extension");
var tileScalingDao_1 = require("./tileScalingDao");
/**
 * Tile Scaling extension
 */
var TileScalingExtension = /** @class */ (function (_super) {
    __extends(TileScalingExtension, _super);
    function TileScalingExtension(geoPackage, tableName) {
        var _this = _super.call(this, geoPackage) || this;
        _this.tableName = tableName;
        _this.tileScalingDao = geoPackage.tileScalingDao;
        return _this;
    }
    /**
     * Get or create the tileScaling id extension
     * @return {Promise}
     */
    TileScalingExtension.prototype.getOrCreateExtension = function () {
        return __awaiter(this, void 0, void 0, function () {
            var extension;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getOrCreate(TileScalingExtension.EXTENSION_NAME, this.tableName, null, TileScalingExtension.EXTENSION_DEFINITION, extension_1.Extension.READ_WRITE)];
                    case 1:
                        extension = _a.sent();
                        return [4 /*yield*/, this.tileScalingDao.createTable()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/, extension];
                }
            });
        });
    };
    /**
     * Creates or updates a tile scaling row for this table extension.
     * @param tileScaling
     */
    TileScalingExtension.prototype.createOrUpdate = function (tileScaling) {
        tileScaling.table_name = this.tableName;
        return this.tileScalingDao.createOrUpdate(tileScaling);
    };
    Object.defineProperty(TileScalingExtension.prototype, "dao", {
        /**
         * Get the TileScalingDao
         * @returns {module:extension/scale.TileScalingDao}
         */
        get: function () {
            return this.tileScalingDao;
        },
        enumerable: false,
        configurable: true
    });
    TileScalingExtension.prototype.has = function () {
        return this.hasExtension(TileScalingExtension.EXTENSION_NAME, this.tableName, null) && this.tileScalingDao.isTableExists();
    };
    /**
     * Remove tileScaling id extension
     */
    TileScalingExtension.prototype.removeExtension = function () {
        if (this.tileScalingDao.isTableExists()) {
            this.geoPackage.deleteTable(tileScalingDao_1.TileScalingDao.TABLE_NAME);
        }
        if (this.extensionsDao.isTableExists()) {
            this.extensionsDao.deleteByExtension(TileScalingExtension.EXTENSION_NAME);
        }
    };
    TileScalingExtension.EXTENSION_NAME = 'nga_tile_scaling';
    TileScalingExtension.EXTENSION_AUTHOR = 'nga';
    TileScalingExtension.EXTENSION_NAME_NO_AUTHOR = 'tile_scaling';
    TileScalingExtension.EXTENSION_DEFINITION = 'http://ngageoint.github.io/GeoPackage/docs/extensions/tile-scaling.html';
    return TileScalingExtension;
}(baseExtension_1.BaseExtension));
exports.TileScalingExtension = TileScalingExtension;
//# sourceMappingURL=index.js.map