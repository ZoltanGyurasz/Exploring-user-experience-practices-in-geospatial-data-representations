{
  "_from": "get-epsg-code@^0.0.7",
  "_id": "get-epsg-code@0.0.7",
  "_inBundle": false,
  "_integrity": "sha512-bfeZZ3GjgHR/UdkVA0j3nmu87/GslUllSk3XiTMb8qaw8RnX+5fFx29ShsYa47XSSm8at6drvz5qEqSVWmRoMg==",
  "_location": "/get-epsg-code",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "get-epsg-code@^0.0.7",
    "name": "get-epsg-code",
    "escapedName": "get-epsg-code",
    "rawSpec": "^0.0.7",
    "saveSpec": null,
    "fetchSpec": "^0.0.7"
  },
  "_requiredBy": [
    "/geo-extent"
  ],
  "_resolved": "https://registry.npmjs.org/get-epsg-code/-/get-epsg-code-0.0.7.tgz",
  "_shasum": "3a952997e4ac8ebaab2f065ef3f59f59082dde41",
  "_spec": "get-epsg-code@^0.0.7",
  "_where": "/Users/Zozo1_1/Projects_local/analytical_map_project/chicas_sth_map/node_modules/geo-extent",
  "author": {
    "name": "Daniel J. Dufour"
  },
  "browser": {
    "dist/get-epsg-code-all.web.min.jss": "dist/get-epsg-code-all.web.min.js"
  },
  "bugs": {
    "url": "https://github.com/danieljdufour/get-epsg-code/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "wkt-parser": "^1.2.3",
    "xml-utils": "0.0.2"
  },
  "deprecated": false,
  "description": "Gets EPSG Code for Various Inputs (incl. OGC WKT, ESRI WKT, GML, Mapfile, PROJ String, Proj4js String, XML)",
  "devDependencies": {
    "@babel/core": "^7.8.4",
    "@babel/plugin-proposal-optional-chaining": "^7.9.0",
    "@babel/preset-env": "^7.8.4",
    "arraybuffer-loader": "^1.0.8",
    "babel-loader": "^8.0.6",
    "file-loader": "^5.0.2",
    "flug": "^1.1.0",
    "gunzip": "^1.2.2",
    "jquery-csv": "^1.0.8",
    "null-loader": "^3.0.0",
    "pako": "^1.0.11",
    "papaparse": "^5.1.1",
    "raw-loader": "^4.0.0",
    "utm-utils": "0.0.1",
    "webpack": "^4.41.5",
    "webpack-cli": "^3.3.10"
  },
  "files": [
    "dist/get-epsg-code-all.node.min.js",
    "dist/get-epsg-code-all.node.min.js.map",
    "dist/get-epsg-code-all.web.min.js",
    "dist/get-epsg-code-all.web.min.js.map",
    "dist/get-epsg-code-excluding-gml-mapfile-mapnik-proj4-xml.node.min.js",
    "dist/get-epsg-code-excluding-gml-mapfile-mapnik-proj4-xml.node.min.js.map",
    "dist/get-epsg-code-excluding-gml-mapfile-mapnik-proj4-xml.web.min.js",
    "dist/get-epsg-code-excluding-gml-mapfile-mapnik-proj4-xml.web.min.js.map",
    "dist/get-epsg-code-excluding-mapfile-mapnik-proj4.node.min.js",
    "dist/get-epsg-code-excluding-mapfile-mapnik-proj4.node.min.js.map",
    "dist/get-epsg-code-excluding-mapfile-mapnik-proj4.web.min.js",
    "dist/get-epsg-code-excluding-mapfile-mapnik-proj4.web.min.js.map",
    "dist/get-epsg-code-excluding-mapfile.node.min.js",
    "dist/get-epsg-code-excluding-mapfile.node.min.js.map",
    "dist/get-epsg-code-excluding-mapfile.web.min.js",
    "dist/get-epsg-code-excluding-mapfile.web.min.js.map"
  ],
  "homepage": "https://github.com/danieljdufour/get-epsg-code#readme",
  "keywords": [
    "epsg",
    "gis",
    "map",
    "ogc",
    "wkt",
    "esri",
    "proj",
    "proj4",
    "proj4js",
    "crs",
    "geodesy",
    "projcrs",
    "geogcrs",
    "geocrs"
  ],
  "license": "CC0-1.0",
  "main": "./dist/get-epsg-code-all.node.min.js",
  "name": "get-epsg-code",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danieljdufour/get-epsg-code.git"
  },
  "scripts": {
    "analyze": "node analyze.js",
    "build": "npm run build:node && npm run build:web",
    "build:demo": "npm run build:web && cp dist/get-epsg-code-all.web.min.js demo/.",
    "build:everything": "if [ -d dist ]; then rm -Rf dist; fi && HASHED_FIELDS='' EXCLUDED_FORMATS='' npm run build && HASHED_FIELDS='esriwkt' EXCLUDED_FORMATS='' npm run build && HASHED_FIELDS='esriwkt,proj4' EXCLUDED_FORMATS='' npm run build && EXCLUDED_FORMATS='gml,xml' HASHED_FIELDS='esriwkt' npm run build && npm run create-build-list",
    "build:everything:node": "if [ -d dist ]; then rm -Rf dist; fi &&  HASHED_FIELDS='' EXCLUDED_FORMATS='' npm run build:node && HASHED_FIELDS='' EXCLUDED_FORMATS='' npm run build:node && HASHED_FIELDS='esriwkt' EXCLUDED_FORMATS='' npm run build:node && HASHED_FIELDS='esriwkt,proj4' EXCLUDED_FORMATS='' npm run build:node && EXCLUDED_FORMATS='gml,xml' HASHED_FIELDS='esriwkt' npm run build:node",
    "build:node": "webpack --mode production --target node",
    "build:web": "webpack --mode production --target web",
    "build:web:dev": "webpack --mode development --target web",
    "create": "node create.js",
    "create-build-list": "bash create-build-list.sh",
    "demo": "npm run build:demo && cd demo && http-server",
    "download-csv": "wget https://s3.amazonaws.com/crs.csv/crs.csv.zip && unzip crs.csv.zip",
    "setup": "cd test/data && bash setup.sh",
    "test": "npm run build:node && TEST_BUNDLE='get-epsg-code-all.node.min.js' node ./test/test.js",
    "test:everything:node": "set -e; npm run build:everything:node && TEST_BUNDLES=\"$(ls ./dist | grep node.min.js$)\"; for TEST_BUNDLE in $TEST_BUNDLES; do echo \"TEST_BUNDLE: $TEST_BUNDLE\" && TEST_BUNDLE=$TEST_BUNDLE npm run test:quick; done",
    "test:html": "npm run build:web:dev && http-server",
    "test:quick": "TEST_BUNDLE=$TEST_BUNDLE node ./test/test.js",
    "update-docs": "npm run test && npm run build:everything && npm run create-build-list"
  },
  "unpkg": "./dist/get-epsg-code-all.web.min.js",
  "version": "0.0.7"
}
